<?php
	/**
	 * 
	 */
	class Record_Model extends Base_Model
	{
		
		function exportCVE($id){
			$table = "tbcve";
			$data = $this->findOneId($table, $id);
			$data->bind_result($colId, $colTitle,  $colCve, $colOsvdb, $colAuthor, $colPublished, $colImpact, $colPlatform, $colFile, $colUrl);
			$data->fetch();

			// Nội dung ghi file
			$expRecord = "ID: ".$colId."\nTitle: ".$colTitle."\nCVE: ".$colCve."\nOSVDB: ".$colOsvdb."\nAuthor: ".$colAuthor."\nPublished: ".$colPublished."\nImpact: ".$colImpact."\nFile: ".$colFile."\nUrl: ".$colUrl; 
			// Tạo file va ghi file : file txt được lưu tại thư mục ./public/export/ với tên là mã CVE
			$expFile = fopen( "./public/export/".$colCve.".txt", "w") or die("Unable to open file!");
			fwrite($expFile, $expRecord);
			setcookie('execute', "Exported successfully: /public/export/".$colCve."-".$colId.".txt", time()+1, "/");
			//echo "<script>alert('Exported successfully: /public/export/",$colCve,".txt')</script>";
		} 

		function insertCVE($recordData){
			extract($recordData);
			// Truy vấn
			$sql = "INSERT INTO tbcve (title, CVE, OSVDB, author, published, impact, platform, file, url) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
			// Tạo đói tượng prepared
			$stmt = $this->conn->prepare($sql);
			// Gán các giá trị vào các tham số ẩn
			$stmt->bind_param("sssssssss", $title, $cve, $osvdb, $author, $published, $impact, $platform, $file, $url);
			if($stmt->execute() === TRUE){
				echo "<script>alert('Record has been inserted successfully')</script>";
			}else{
				//echo "<script>alert('Error : ".$this->conn->error."')</script>";
				echo "<script>alert('Error !')</script>";
			}
			$stmt->close();
		}

		function updateCVE($recordData){
			extract($recordData);	
			$sql = "UPDATE tbcve SET title=?, CVE=?, OSVDB=?, author=?, published=?, impact=?, platform=?, file=?, url=? WHERE id=?";
			$stmt = $this->conn->prepare($sql);
			$stmt->bind_param("sssssssssi", $title, $cve, $osvdb, $author, $published, $impact, $platform, $file, $url, $id);
			$stmt->execute();
			if($stmt->execute() === TRUE){
				$url =BASE_URL.'?module=update&id='.$id;
				header("location: $url");
				setcookie('update', 'Record has been updated successfully', time()+1, "/");
				//echo "<script>alert('Record has been inserted successfully')</script>";
			}else{

				echo "<script>alert('Error !')</script>";
			}
			$stmt->close();
		}

		function searchCVE($keySearch){
			extract($keySearch);
			$n = N;
			$sql = "SELECT * FROM tbcve WHERE title LIKE ? AND CVE LIKE ? AND osvdb LIKE ? AND author LIKE ? AND published LIKE ? AND impact LIKE ? AND platform LIKE ? LIMIT ?, ?";
 			$stmt= $this->conn->prepare($sql);
 			$stmt->bind_param("sssssssss", $title, $cve, $osvdb, $author, $published, $impact, $platform, $fromRecord, $n);
			$stmt->execute(); 
			$stmt->store_result();
			$stmt->bind_result($colId, $colTitle,  $colCve, $colOsvdb, $colAuthor, $colPublished, $colImpact, $colPlatform, $colFile, $colUrl);

			if($stmt->num_rows > 0){
				while($stmt->fetch()){
					$arrData[] = [
						'id' => $colId,
						'title' => $colTitle,
						'cve' =>  $colCve,
						'osvdb' => $colOsvdb,
						'author' => $colAuthor,
						'published' => $colPublished,
						'impact' => $colImpact,
						'platform' => $colPlatform,
						'file' => $colFile,
						'url' => $colUrl,
					];	
				}
				return $arrData;
			}
		}
		function findOneCVE($id){
			$table = "tbcve";
			$data = $this->findOneId($table, $id);
			$data->bind_result($colId, $colTitle,  $colCve, $colOsvdb, $colAuthor, $colPublished, $colImpact, $colPlatform, $colFile, $colUrl);
			if($data->num_rows > 0){
				while($data->fetch()){
					$arrData[] = [
						'id' => $colId,
						'title' => $colTitle,
						'cve' =>  $colCve,
						'osvdb' => $colOsvdb,
						'author' => $colAuthor,
						'published' => $colPublished,
						'impact' => $colImpact,
						'platform' => $colPlatform,
						'file' => $colFile,
						'url' => $colUrl,
					];	
				}
				return $arrData;
			}
		}

		function numRecord(){
			$sql = "SELECT id FROM tbcve ";
 			$stmt= $this->conn->prepare($sql);
			$stmt->execute(); 
			$stmt->store_result();
			$numRecord = $stmt->num_rows;
			$numPages = ceil($numRecord / N);

			return ['numRecord' => $numRecord, 'numPages' => $numPages];
		}

		function numRecordSearch($keySearch){
			extract($keySearch);
			$n = N;
			$sql = "SELECT * FROM tbcve WHERE title LIKE ? AND CVE LIKE ? AND osvdb LIKE ? AND author LIKE ? AND published LIKE ? AND impact LIKE ? AND platform LIKE ? LIMIT ?, ?";
 			$stmt= $this->conn->prepare($sql);
 			$stmt->bind_param("sssssssss", $title, $cve, $osvdb, $author, $published, $impact, $platform, $fromRecord, $n);
			$stmt->execute(); 
			$stmt->store_result();
			$numRecord = $stmt->num_rows;
			$numPages = ceil($numRecord / N);

			return ['numRecord' => $numRecord, 'numPages' => $numPages];
		}
	}
?>